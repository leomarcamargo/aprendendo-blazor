@page "/pessoa/{Id:int}"
@page "/pessoa/{Id:int}/{Nome}"
@inject IRepository Repository
@inject NavigationManager NavigationManager
@inject IMostrarMensagem MostrarMensagem
@attribute [Authorize(Roles = "admin")]

@if (_model == null)
{
    <p class="text-center">Carregando</p>
}
else
{
    <h2 class="font-weight-bold">@_model.Pessoa.Nome</h2>
    <span><strong>DATA DE NASCIMENTO</strong>: @_model.Pessoa.DataNascimento?.ToShortDateString()</span>
    <div style="display: flex; margin-top: 10px;">
        <div style="display: inline-block; margin-right: 10px;">
            <img src="@_model.Pessoa.Foto" style="width: 225px; height: 315px" alt="@_model.Pessoa.Nome" />
        </div>
        @if (!string.IsNullOrWhiteSpace(_model.Pessoa.Biografia))
        {
            <div style="display: inline-block; margin-right: 5px;">
                <h4 class="font-weight-bold">Biografia</h4>
                <MostrarMarkdown ConteudoMarkdown="@_model.Pessoa.Biografia"></MostrarMarkdown>
            </div>
        }
    </div>
    <hr />
    <div class="row mt-3">
        <div class="col-md-12">
            <h2 class="font-weight-bold">Filmografia</h2>
            <ListaFilmes Filmes="_model.Filmes" />
        </div>
    </div>
}

@code {
    [Parameter] public int Id { get; set; }
    [Parameter] public string Nome { get; set; }
    private VisualizarPessoaDTO _model;

    protected override async Task OnInitializedAsync()
    {
        var responseHttp = await Repository.Get<VisualizarPessoaDTO>($"api/pessoa/visualizar/{Id}");
        if (responseHttp.Error)
        {
            if (responseHttp.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                NavigationManager.NavigateTo("");
            }
            else
            {
                var mensagemErro = await responseHttp.GetBody();
                await MostrarMensagem.MostrarMensagemErro(mensagemErro);
            }
        }
        else
        {
            _model = responseHttp.Response;
        }
    }
}
