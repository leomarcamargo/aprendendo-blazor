@using Blazor.FileReader
@inject IFileReaderService FileReaderService

<div>
    <label>@Label</label>
    <div>
        <input type="file" @ref="_elementoInput" @onchange="ArquivoImagemSelecionada" accept=".jpg, .jpeg, .png"/>
    </div>
</div>
<div>
    @if (_imagemBase64 != null)
    {
        <div style="margin: 10px">
            <img src="data:image/jpeg;base64,@_imagemBase64" style="width: 400px;" alt="Imagem" />
        </div>
    }

    @if (ImagemTemporaria != null)
    {
        <div style="margin: 10px">
            <img src="@ImagemTemporaria" style="width: 400px;" alt="Imagem" />
        </div>
    }
</div>

@code {
    [Parameter] public string Label { get; set; } = "Imagem";
    [Parameter] public string ImagemTemporaria { get; set; }
    [Parameter] public EventCallback<string> ImagemSelecionada { get; set; }
    private string _imagemBase64;
    ElementReference _elementoInput;


    async Task ArquivoImagemSelecionada()
    {
        foreach (var arquivo in await  FileReaderService.CreateReference(_elementoInput).EnumerateFilesAsync())
        {
            await using var memoryStream = await arquivo.CreateMemoryStreamAsync(4 * 1024);
            
            var bytesImagem = new byte[memoryStream.Length];
            memoryStream.Read(bytesImagem, 0, (int) memoryStream.Length);
            _imagemBase64 = Convert.ToBase64String(bytesImagem);
            await ImagemSelecionada.InvokeAsync(_imagemBase64);
            ImagemTemporaria = null;
            StateHasChanged();
        }
    }
}
